package cyl.simpledatastruc.mystack;

/**
 * @author chengyuanliang
 * @desc  数据结构和算法更多是用作程序员的工具，它们作为构思算法的辅助工具，
 * 而不是完全的数据存储工具。这些数据结构的生命周期比数据库类型的结构要短得多，
 * 在程序执行期间它们才被创建，通常用它们去执行某项特殊的业务，执行完成之后，它们就被销毁。
 * 这里的它们就是——栈和队列
 * @since 2019-04-03
 */


/**
 * @desc
 *   　栈（英语：stack）又称为堆栈或堆叠，栈作为一种数据结构，是一种只能在一端进行插入和删除操作的特殊线性表。
 *
 *    它按照先进后出的原则存储数据，先进入的数据被压入栈底，最后的数据在栈顶，需要读数据的时候从栈顶开始弹出数据
 *
 *    （最后一个数据被第一个读出来）。栈具有记忆作用，对栈的插入与删除操作中，不需要改变栈底指针。
 *
 * 　　栈是允许在同一端进行插入和删除操作的特殊线性表。允许进行插入和删除操作的一端称为栈顶(top)，另一端为栈底(bottom)；
 *
 *     栈底固定，而栈顶浮动；栈中元素个数为零时称为空栈。插入一般称为进栈（PUSH），删除则称为退栈（POP）。
 *
 * 　　由于堆叠数据结构只允许在一端进行操作，因而按照后进先出（LIFO, Last In First Out）的原理运作。栈也称为后进先出表。
 *
 **/
public class MyStack {


}
